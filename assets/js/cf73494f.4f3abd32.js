"use strict";(self.webpackChunknavigator_documentation=self.webpackChunknavigator_documentation||[]).push([[984],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>p});var t=n(7294);function c(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){c(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,c=function(e,a){if(null==e)return{};var n,t,c={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(c[n]=e[n]);return c}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var s=t.createContext({}),l=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},d=function(e){var a=l(e.components);return t.createElement(s.Provider,{value:a},e.children)},b="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},f=t.forwardRef((function(e,a){var n=e.components,c=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),b=l(n),f=c,p=b["".concat(s,".").concat(f)]||b[f]||u[f]||r;return n?t.createElement(p,o(o({ref:a},d),{},{components:n})):t.createElement(p,o({ref:a},d))}));function p(e,a){var n=arguments,c=a&&a.mdxType;if("string"==typeof e||c){var r=n.length,o=new Array(r);o[0]=f;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[b]="string"==typeof e?e:c,o[1]=i;for(var l=2;l<r;l++)o[l]=n[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9278:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var t=n(7462),c=(n(7294),n(3905));const r={},o=void 0,i={unversionedId:"Navigator Database/Nav DB by PaLM 2",id:"Navigator Database/Nav DB by PaLM 2",title:"Nav DB by PaLM 2",description:"{\\rtf1\\ansi\\ansicpg1252\\cocoartf2709",source:"@site/docs/Navigator Database/Nav DB by PaLM 2.md",sourceDirName:"Navigator Database",slug:"/Navigator Database/Nav DB by PaLM 2",permalink:"/navigator-documentation/docs/Navigator Database/Nav DB by PaLM 2",draft:!1,editUrl:"https://github.com/Oslan17/navigator-documentation/tree/main/docs/docs/Navigator Database/Nav DB by PaLM 2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Navigator Database",permalink:"/navigator-documentation/docs/category/navigator-database"},next:{title:"Tutorials Navigator",permalink:"/navigator-documentation/docs/category/tutorials-navigator"}},s={},l=[],d={toc:l},b="wrapper";function u(e){let{components:a,...n}=e;return(0,c.kt)(b,(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"{\\rtf1\\ansi\\ansicpg1252\\cocoartf2709\n\\cocoatextscaling0\\cocoaplatform0{\\fonttbl\\f0\\fnil\\fcharset0 Menlo-Bold;\\f1\\fnil\\fcharset0 Menlo-Regular;}\n{\\colortbl;\\red255\\green255\\blue255;\\red70\\green137\\blue204;\\red24\\green24\\blue24;\\red193\\green193\\blue193;\n\\red85\\green129\\blue224;\\red194\\green126\\blue101;}\n{","*","\\expandedcolortbl;;\\cssrgb\\c33725\\c61176\\c83922;\\cssrgb\\c12157\\c12157\\c12157;\\cssrgb\\c80000\\c80000\\c80000;\n\\cssrgb\\c40392\\c58824\\c90196;\\cssrgb\\c80784\\c56863\\c47059;}\n\\margl1440\\margr1440\\vieww18720\\viewh13320\\viewkind0\n\\deftab720\n\\pard\\pardeftab720\\partightenfactor0"),(0,c.kt)("p",null,"\\f0\\b\\fs24 \\cf2 \\cb3 \\expnd0\\expndtw0\\kerning0\n\\outl0\\strokewidth0 \\strokec2 # Navigator Training Frontend\n\\f1\\b0 \\cf4 \\cb1 \\strokec4 \\\n\\"),(0,c.kt)("p",null,"\\f0\\b \\cf2 \\cb3 \\strokec2 ## Comenzando\n\\f1\\b0 \\cf4 \\cb1 \\strokec4 \\\n\\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf4 \\cb3 Comencemos con los\n\\f0\\b \\cf2 \\strokec2 ",(0,c.kt)("strong",{parentName:"p"},"Conceptos Basicos del Uso de Comandos SQL"),"\n\\f1\\b0 \\cf4 \\strokec4 .\\cb1 \\\n\\\n\\pard\\pardeftab720\\partightenfactor0"),(0,c.kt)("p",null,"\\f0\\b \\cf2 \\cb3 \\strokec2 ### What you'll need\n\\f1\\b0 \\cf4 \\cb1 \\strokec4 \\\n\\"),(0,c.kt)("p",null,"\\f0\\b \\cf2 \\cb3 \\strokec2 ## 1. Resumen\n\\f1\\b0 \\cf4 \\cb1 \\strokec4 \\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf4 \\cb3 En la transcripci\\'f3n se explica c\\'f3mo funciona la tabla for data de hen y c\\'f3mo se deben realizar las consultas para obtener informaci\\'f3n de ella. Se dan varios ejemplos de consultas y se explica c\\'f3mo interpretar los resultados. Adem\\'e1s, se indica que para ma\\'f1ana se realizar\\'e1 un curso en el que se ense\\'f1ar\\'e1 a realizar consultas m\\'e1s complejas con esta tabla.\\cb1 \\\n\\\n\\\n\\pard\\pardeftab720\\partightenfactor0"),(0,c.kt)("p",null,"\\f0\\b \\cf2 \\cb3 \\strokec2 ## 2. Temas desarrollados\n\\f1\\b0 \\cf4 \\cb1 \\strokec4 \\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf4 \\cb3 La tabla for data\\cb1 \\\n\\cb3 La tabla for data es una tabla sencilla que contiene informaci\\'f3n de las visitas realizadas a una tienda de un cliente. Cada fila de la tabla representa una visita y contiene informaci\\'f3n sobre el n\\'famero de la visita, la fecha de la visita, la tienda en la que se realiz\\'f3 la visita, el tipo de formulario utilizado y las respuestas a las preguntas del formulario. Esta informaci\\'f3n se utiliza para analizar el rendimiento de las tiendas y para mejorar la experiencia de los clientes.\\cb1 \\\n\\\n\\cb3 La tabla for data tiene 511 columnas, pero no todas las columnas est\\'e1n presentes en todas las visitas. Las columnas que est\\'e1n presentes en una visita dependen del tipo de formulario utilizado para realizar la visita.\\cb1 \\\n\\\n\\cb3 El n\\'famero de la visita se almacena en la columna form id. El tipo de formulario se almacena en la columna form.\\cb1 \\\n\\\n\\cb3 La tabla for data tambi\\'e9n contiene informaci\\'f3n sobre la fecha y hora de la visita, la tienda visitada, el empleado que realiz\\'f3 la visita, etc.\\cb1 \\\n\\\n\\cb3 Preguntas que se pueden hacer en una visita\\cb1 \\\n\\cb3 Las preguntas se pueden clasificar en dos tipos: preguntas est\\'e1ndar y preguntas espec\\'edficas de cada tipo de visita.\\cb1 \\\n\\\n\\cb3 Las preguntas est\\'e1ndar son aquellas que se hacen en todas las visitas, independientemente del tipo de tienda que se visite. Estas preguntas incluyen informaci\\'f3n sobre la fecha y hora de la visita, la tienda que se visit\\'f3, qui\\'e9n hizo la visita, etc.\\cb1 \\\n\\\n\\cb3 Las preguntas espec\\'edficas de cada tipo de visita son aquellas que se hacen solo en visitas de un tipo espec\\'edfico de tienda. Por ejemplo, en una visita a una tienda de electr\\'f3nica, se puede preguntar si el producto que se busca est\\'e1 en stock, si el precio es el adecuado, etc.\\cb1 \\\n\\\n\\cb3 Todas las preguntas se almacenan en la tabla for data. El n\\'famero de la visita se almacena en el campo form id, y el tipo de pregunta se almacena en el campo column name. La respuesta a la pregunta se almacena en el campo data.\\cb1 \\\n\\\n\\cb3 Form ID y Formit\\cb1 \\\n\\cb3 El form id es el n\\'famero de la visita y el formit es el tipo de formulario que se est\\'e1 utilizando.\\cb1 \\\n\\cb3 Obtener el store id de una visita\\cb1 \\\n\\cb3 Para obtener el store id de una visita, se debe utilizar el campo 03 de la tabla hensenformdata. Este campo contiene el id de la tienda donde se realiz\\'f3 la visita.\\cb1 \\\n\\\n\\cb3 Obtener la fecha de actualizaci\\'f3n de una visita\\cb1 \\\n\\cb3 Para obtener la fecha de actualizaci\\'f3n de una visita, se puede utilizar el siguiente query:\\cb1 \\\n\\cb3 ",(0,c.kt)("inlineCode",{parentName:"p"},"\\cb1 \\\n\\cb3 SELECT form_id,\\cb1 \\\n\\cb3        store_id,\\cb1 \\\n\\cb3        date,\\cb1 \\\n\\cb3        region_name,\\cb1 \\\n\\cb3        district_name,\\cb1 \\\n\\cb3        market_name\\cb1 \\\n\\cb3 FROM hensen_form_data\\cb1 \\\n\\cb3 JOIN hen_stores\\cb1 \\\n\\cb3 ON hensen_form_data.store_id = hen_stores.store_id\\cb1 \\\n\\cb3 WHERE form_id = 3793\\cb1 \\\n\\cb3 AND updated date IS NOT NULL\\cb1 \\\n\\cb3 LIMIT 100;\\cb1 \\\n\\cb3 "),"\\cb1 \\\n\\cb3 Este query selecciona los siguientes campos de las dos tablas:\\cb1 \\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf5 \\cb3 \\strokec5 ",(0,c.kt)("em",{parentName:"p"},"\\cf4 \\strokec4  form_id: El n\\'famero de la visita.\\cb1 \\\n\\cf5 \\cb3 \\strokec5 "),"\\cf4 \\strokec4  store_id: El ID de la tienda.\\cb1 \\\n\\cf5 \\cb3 \\strokec5 ",(0,c.kt)("em",{parentName:"p"},"\\cf4 \\strokec4  date: La fecha de la visita.\\cb1 \\\n\\cf5 \\cb3 \\strokec5 "),"\\cf4 \\strokec4  region_name: El nombre de la regi\\'f3n.\\cb1 \\\n\\cf5 \\cb3 \\strokec5 ",(0,c.kt)("em",{parentName:"p"},"\\cf4 \\strokec4  district_name: El nombre del distrito.\\cb1 \\\n\\cf5 \\cb3 \\strokec5 "),"\\cf4 \\strokec4  market_name: El nombre del mercado.\\cb1 \\\n\\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf4 \\cb3 El query tambi\\'e9n utiliza el operador \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"JOIN"),"\\cf4 \\strokec4  para unir las dos tablas por el campo \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store_id"),"\\cf4 \\strokec4 .\\cb1 \\\n\\\n\\cb3 El operador \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"WHERE"),"\\cf4 \\strokec4  se utiliza para filtrar los resultados por el campo \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form_id"),"\\cf4 \\strokec4  y el campo \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"updated_date"),"\\cf4 \\strokec4 .\\cb1 \\\n\\\n\\cb3 El campo \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form_id"),"\\cf4 \\strokec4  se utiliza para seleccionar solo las visitas del formulario 3793.\\cb1 \\\n\\\n\\cb3 El campo \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"updated_date"),"\\cf4 \\strokec4  se utiliza para seleccionar solo las visitas que han sido actualizadas.\\cb1 \\\n\\\n\\cb3 El l\\'edmite de 100 se utiliza para limitar el n\\'famero de resultados que se devuelven.\\cb1 \\\n\\\n\\cb3 Join entre dos tablas\\cb1 \\\n\\cb3 Se debe utilizar el comando \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"select"),"\\cf4 \\strokec4  para traer los campos \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form id"),"\\cf4 \\strokec4 , \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store id"),"\\cf4 \\strokec4 , fecha, nombre de la regi\\'f3n, nombre del distrito y nombre del market de las dos tablas. Los tres primeros campos del select salen de la tabla henenseform data y los tres \\'faltimos campos salen de la tabla hen stores. Como ya se vio en el query anterior, la columna triple0 piso 013 es la que trae el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store id"),"\\cf4 \\strokec4 , donde lo consigues en el campo data de esa columna y el updated date sale de la columna triple0 piso 055, donde lo consigues en el campo data de esa columna. Todo esto se debe hacer utilizando formit que es el tipo de formulario, no form id que es el n\\'famero de visita, formit 3793 y por favor utilicen un l\\'edmite inclusive para las pruebas no solo para el query final.\\cb1 \\\n\\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf6 \\cb3 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"With"),"\\cf4 \\strokec4  para hacer subqueries\\cb1 \\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf4 \\cb3 Ejemplo para utilizar el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"with"),"\\cf4 \\strokec4  para hacer subqueries:\\cb1 \\\n\\cb3 ",(0,c.kt)("inlineCode",{parentName:"p"},"\\cb1 \\\n\\cb3 select form_id, store_id, date, updated_date\\cb1 \\\n\\cb3 from hensenseform_data\\cb1 \\\n\\cb3 where form_id = 3793\\cb1 \\\n\\cb3 limit 100;\\cb1 \\\n\\cb3 "),"\\cb1 \\\n\\cb3 Este query trae el form_id, store_id, date y updated_date de la tabla hensenseform_data, donde el form_id es igual a 3793 y se le pone un l\\'edmite de 100.\\cb1 \\\n\\\n\\cb3 L\\'edmite en un query \\cb1 \\\n\\cb3 El l\\'edmite se utiliza para indicar el n\\'famero de filas que se van a devolver en un query. Se puede utilizar en cualquier tipo de query, pero es especialmente \\'fatil cuando se trabaja con grandes cantidades de datos.\\cb1 \\\n\\\n\\cb3 Para utilizar el l\\'edmite, se utiliza la palabra clave \"limit\" seguida del n\\'famero de filas que se desean devolver. Por ejemplo, el siguiente query devolver\\'e1 las primeras 10 filas de la tabla \"users\":\\cb1 \\\n\\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf6 \\cb3 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"SELECT * FROM users LIMIT 10;"),"\\cf4 \\cb1 \\strokec4 \\\n\\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf4 \\cb3 El l\\'edmite se puede utilizar junto con otros operadores de consulta, como \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"where"),"\\cf4 \\strokec4  y \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"order by"),'\\cf4 \\strokec4 . Por ejemplo, el siguiente query devolver\\\'e1 las primeras 10 filas de la tabla "users" que tengan el nombre "John":\\cb1 \\\n\\cb3 ',(0,c.kt)("inlineCode",{parentName:"p"},"\\cb1 \\\n\\cb3 SELECT * FROM users WHERE name = \"John\" LIMIT 10;\\cb1 \\\n\\cb3 El l\\'edmite tambi\\'e9n se puede utilizar para paginar los resultados de un query. Por ejemplo, el siguiente query devolver\\'e1 las primeras 10 filas de la tabla \"users\", y luego se ejecutar\\'e1 nuevamente para devolver las siguientes 10 filas, y as\\'ed sucesivamente:\\cb1 \\\n\\cb3 SELECT * FROM users LIMIT 10 OFFSET 0;\\cb1 \\\n\\cb3 SELECT * FROM users LIMIT 10 OFFSET 10;\\cb1 \\\n\\cb3 SELECT * FROM users LIMIT 10 OFFSET 20;\\cb1 \\\n\\cb3 "),"\\cb1 \\\n\\cb3 Y as\\'ed sucesivamente.\\cb1 \\\n\\cb3 Enunciado ejercicio pr\\'e1ctico\\cb1 \\\n\\cb3 Copiar el siguiente query:\\cb1 \\\n\\cb3 ",(0,c.kt)("inlineCode",{parentName:"p"},"\\cb1 \\\n\\cb3 select form_id,\\cb1 \\\n\\cb3 store_id,\\cb1 \\\n\\cb3 data as store_id,\\cb1 \\\n\\cb3 updated_date\\cb1 \\\n\\cb3 from hensenseform_data\\cb1 \\\n\\cb3 where form_id = 3793\\cb1 \\\n\\cb3 limit 100;\\cb1 \\\n\\cb3 "),"\\cb1 \\\n\\cb3 Este query traer\\'e1 el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form_id"),"\\cf4 \\strokec4 , el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store_id"),"\\cf4 \\strokec4 , la fecha y el updated_date de la tabla hensenseform_data, utilizando el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form_id"),"\\cf4 \\strokec4  = 3793 como filtro.\\cb1 \\\n\\cb3 Este query se tiene que trabajar en staging y con un l\\'edmite de 100 para no traer toda la data.\\cb1 \\\n\\\n\\\n\\pard\\pardeftab720\\partightenfactor0"),(0,c.kt)("p",null,"\\f0\\b \\cf2 \\cb3 \\strokec2 ## 3. Preguntas m\\'e1s frecuentes\n\\f1\\b0 \\cf4 \\cb1 \\strokec4 \\\n\\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf4 \\cb3 \\'bfQu\\'e9 es una visita?\\cb1 \\\n\\cb3 Una visita es un formulario que llena la persona que va a hacer la visita.\\cb1 \\\n\\\n\\cb3 \\'bfCu\\'e1les son los distintos tipos de preguntas que se pueden hacer en una visita?\\cb1 \\\n\\cb3 Hay distintos tipos de preguntas que se pueden hacer en una visita, por ejemplo:\\cb1 \\\n\\\n\\cb3 \\'95 \\'bfD\\'f3nde est\\'e1 el producto?\\cb1 \\\n\\cb3 \\'95 \\'bfC\\'f3mo funciona el producto?\\cb1 \\\n\\cb3 \\'95 \\'bfQu\\'e9 tan satisfecho est\\'e1 con el producto?\\cb1 \\\n\\cb3 \\'95 \\'bfRecomendar\\'eda el producto a un amigo?\\cb1 \\\n\\cb3 \\'95 \\'bfQu\\'e9 podr\\'eda mejorarse en el producto?\\cb1 \\\n\\\n\\cb3 Estas son solo algunas de las preguntas que se pueden hacer en una visita, y las respuestas a estas preguntas pueden ayudar a las empresas a mejorar sus productos y servicios.\\cb1 \\\n\\\n\\cb3 \\'bfC\\'f3mo se guarda la informaci\\'f3n de una visita en la tabla hensenformdata?\\cb1 \\\n\\cb3 La informaci\\'f3n de una visita se guarda en la tabla hensenformdata en forma de registros. Cada registro corresponde a una pregunta y respuesta de la visita.\\cb1 \\\n\\\n\\cb3 \\'bfQu\\'e9 es el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form id"),"\\cf4 \\strokec4 ?\\cb1 \\\n\\cb3 El \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form id"),"\\cf4 \\strokec4  es el n\\'famero de la visita.\\cb1 \\\n\\\n\\cb3 \\'bfQu\\'e9 es el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"formit"),"\\cf4 \\strokec4 ?\\cb1 \\\n\\cb3 El \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"formit"),"\\cf4 \\strokec4  es el tipo de formulario que se est\\'e1 utilizando.\\cb1 \\\n\\\n\\cb3 \\'bfD\\'f3nde puedo encontrar la lista de formularios que hay disponibles?\\cb1 \\\n\\cb3 Puedes encontrar la lista de formularios disponibles en la tabla forms.\\cb1 \\\n\\\n\\cb3 \\'bfC\\'f3mo se llama la columna que contiene el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store id"),"\\cf4 \\strokec4 ?\\cb1 \\\n\\cb3 La columna que contiene el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store id"),"\\cf4 \\strokec4  es la columna 03.\\cb1 \\\n\\\n\\cb3 \\'bfC\\'f3mo se llama la columna que contiene la fecha?\\cb1 \\\n\\cb3 La columna que contiene la fecha es la columna 055.\\cb1 \\\n\\\n\\cb3 \\'bfC\\'f3mo obtener el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store id"),"\\cf4 \\strokec4  de una visita?\\cb1 \\\n\\cb3 Para obtener el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store id"),"\\cf4 \\strokec4  de una visita, se puede utilizar el siguiente query:\\cb1 \\\n\\cb3 ",(0,c.kt)("inlineCode",{parentName:"p"},"\\cb1 \\\n\\cb3 SELECT form_id,\\cb1 \\\n\\cb3        store_id,\\cb1 \\\n\\cb3        date,\\cb1 \\\n\\cb3        region_name,\\cb1 \\\n\\cb3        district_name,\\cb1 \\\n\\cb3        market_name\\cb1 \\\n\\cb3 FROM hensenform_data\\cb1 \\\n\\cb3 JOIN hen_stores\\cb1 \\\n\\cb3 ON hensenform_data.store_id = hen_stores.store_id\\cb1 \\\n\\cb3 WHERE form_id = 3793\\cb1 \\\n\\cb3 LIMIT 100;\\cb1 \\\n\\cb3 "),"\\cb1 \\\n\\cb3 \\'bfC\\'f3mo se puede consultar la informaci\\'f3n de una visita en la tabla hensenformdata?\\cb1 \\\n\\cb3 Para consultar la informaci\\'f3n de una visita en la tabla hensenformdata, se puede utilizar el siguiente query:\\cb1 \\\n\\cb3 ",(0,c.kt)("inlineCode",{parentName:"p"},"\\cb1 \\\n\\cb3 select form_id, store_id, date, region, district, market\\cb1 \\\n\\cb3 from hensenformdata\\cb1 \\\n\\cb3 join hen_stores on hensenformdata.store_id = hen_stores.store_id\\cb1 \\\n\\cb3 where form_id = 3793\\cb1 \\\n\\cb3 limit 100;\\cb1 \\\n\\cb3 "),"\\cb1 \\\n\\cb3 Este query selecciona el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form_id"),"\\cf4 \\strokec4 , \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store_id"),"\\cf4 \\strokec4 , \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"date"),"\\cf4 \\strokec4 , \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"region"),"\\cf4 \\strokec4 , \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"district"),"\\cf4 \\strokec4  y \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"market"),"\\cf4 \\strokec4  de la tabla hensenformdata. El \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store_id"),"\\cf4 \\strokec4  se utiliza para unir las dos tablas, y el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form_id"),"\\cf4 \\strokec4  se utiliza para seleccionar solo las filas que corresponden a la visita con el id 3793.\\cb1 \\\n\\cb3 El l\\'edmite de 100 se utiliza para evitar que se devuelvan todas las filas de la tabla.\\cb1 \\\n\\\n\\cb3 \\'bfC\\'f3mo se puede utilizar la tabla hensenformdata para analizar la informaci\\'f3n de las visitas?\\cb1 \\\n\\cb3 La tabla hensenformdata se puede utilizar para analizar la informaci\\'f3n de las visitas mediante el uso de consultas. Las consultas permiten extraer informaci\\'f3n espec\\'edfica de la tabla, como el n\\'famero de visitas, el tipo de formulario utilizado, la fecha y la hora de la visita, la tienda visitada, etc. Las consultas tambi\\'e9n se pueden utilizar para realizar an\\'e1lisis m\\'e1s complejos, como la comparaci\\'f3n de datos entre diferentes visitas o la identificaci\\'f3n de tendencias.\\cb1 \\\n\\\n\\cb3 \\'bfC\\'f3mo obtener la fecha de actualizaci\\'f3n de una visita?\\cb1 \\\n\\cb3 Para obtener la fecha de actualizaci\\'f3n de una visita, se puede utilizar el siguiente query:\\cb1 \\\n\\cb3 ",(0,c.kt)("inlineCode",{parentName:"p"},"\\cb1 \\\n\\cb3 SELECT form_id,\\cb1 \\\n\\cb3   store_id,\\cb1 \\\n\\cb3   date,\\cb1 \\\n\\cb3   region_name,\\cb1 \\\n\\cb3   district_name,\\cb1 \\\n\\cb3   market_name\\cb1 \\\n\\cb3 FROM hensen_form_data\\cb1 \\\n\\cb3 JOIN hen_stores ON hensen_form_data.store_id = hen_stores.store_id\\cb1 \\\n\\cb3 WHERE form_id = 3793\\cb1 \\\n\\cb3 AND updated_date IS NOT NULL\\cb1 \\\n\\cb3 LIMIT 100;\\cb1 \\\n\\cb3 "),"\\cb1 \\\n\\cb3 Este query obtiene el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form_id"),"\\cf4 \\strokec4 , \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store_id"),"\\cf4 \\strokec4 , \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"date"),"\\cf4 \\strokec4 , \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"region_name"),"\\cf4 \\strokec4 , \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"district_name"),"\\cf4 \\strokec4  y \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"market_name"),"\\cf4 \\strokec4  de las tablashensen_form_data y hen_stores. El \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form_id"),"\\cf4 \\strokec4  y \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"store_id"),"\\cf4 \\strokec4  se obtienen de la tabla hensen_form_data, mientras que la fecha, la regi\\'f3n, el distrito y el mercado se obtienen de la tabla hen_stores. El query tambi\\'e9n utiliza el operador AND para filtrar los resultados por el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"form_id"),"\\cf4 \\strokec4  y el \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"updated_date"),"\\cf4 \\strokec4 .\\cb1 \\\n\\cb3 El l\\'edmite de 100 se utiliza para limitar el n\\'famero de resultados que se devuelven.\\cb1 \\\n\\\n\\cb3 \\'bfQu\\'e9 es un join?\\cb1 \\\n\\cb3 Un join es una operaci\\'f3n que combina dos o m\\'e1s tablas de una base de datos en una sola tabla. Esto permite obtener informaci\\'f3n de ambas tablas a la vez.\\cb1 \\\n\\\n\\cb3 \\'bfC\\'f3mo se hace un join?\\cb1 \\\n\\cb3 Para hacer un join, se utilizan las palabras clave \"join\" y \"on\". La palabra \"join\" indica que se va a realizar un join, y la palabra \"on\" indica el campo o campos que se utilizar\\'e1n para unir las dos tablas.\\cb1 \\\n\\\n\\cb3 \\'bfCu\\'e1les son los diferentes tipos de joins?\\cb1 \\\n\\\n\\cb3 Los diferentes tipos de joins son:\\cb1 \\\n\\cb3 \\'95 Inner join:\\cb1 \\\n\\cb3     El inner join devuelve todos los registros de la tabla izquierda que coinciden con los registros de la tabla derecha.\\cb1 \\\n\\cb3 \\'95 Left outer join:\\cb1 \\\n\\cb3     El left outer join devuelve todos los registros de la tabla izquierda, incluso si no hay coincidencias en la tabla derecha.\\cb1 \\\n\\cb3 \\'95 Right outer join:\\cb1 \\\n\\cb3     El right outer join devuelve todos los registros de la tabla derecha, incluso si no hay coincidencias en la tabla izquierda.\\cb1 \\\n\\cb3 \\'95 Full outer join:\\cb1 \\\n\\cb3     El full outer join devuelve todos los registros de ambas tablas, incluso si no hay coincidencias en ninguna de las tablas.\\cb1 \\\n\\\n\\cb3 \\'bfCu\\'e1l es el join m\\'e1s utilizado?\\cb1 \\\n\\cb3 El join m\\'e1s utilizado es el inner join. Esto se debe a que el inner join solo devuelve los registros que coinciden en ambas tablas, lo que evita que se devuelvan registros duplicados.\\cb1 \\\n\\\n\\cb3 \\'bfC\\'f3mo puedo hacer un join en PostgreSQL?\\cb1 \\\n\\cb3 \\'95 Para hacer un join en PostgreSQL, se utilizan las siguientes instrucciones:\\cb1 \\\n\\cb3 ",(0,c.kt)("inlineCode",{parentName:"p"},"\\cb1 \\\n\\cb3 \\'95 SELECT * FROM table1 JOIN table2 ON table1.column1 = table2.column2;\\cb1 \\\n\\cb3 \\'95 SELECT * FROM table1 LEFT JOIN table2 ON table1.column1 = table2.column2;\\cb1 \\\n\\cb3 \\'95 SELECT * FROM table1 RIGHT JOIN table2 ON table1.column1 = table2.column2;\\cb1 \\\n\\cb3 \\'95 SELECT * FROM table1 FULL JOIN table2 ON table1.column1 = table2.column2;\\cb1 \\\n\\cb3 "),"\\cb1 \\\n\\cb3 \\'bfC\\'f3mo se utiliza el with para hacer subqueries?\\cb1 \\\n\\cb3 El with se utiliza para crear un alias para una consulta y luego utilizar ese alias en otra consulta. Esto permite crear consultas m\\'e1s complejas y eficientes.\\cb1 \\\n\\\n\\cb3 \\'bfCu\\'e1les son las ventajas de utilizar el with para hacer subqueries?\\cb1 \\\n\\cb3 Las ventajas de utilizar el with para hacer subqueries son:\\cb1 \\\n\\cb3 \\'95 Permite crear consultas m\\'e1s complejas y eficientes.\\cb1 \\\n\\cb3 \\'95 Reduce la cantidad de c\\'f3digo que se necesita escribir.\\cb1 \\\n\\cb3 \\'95 Facilita la comprensi\\'f3n de las consultas.\\cb1 \\\n\\\n\\cb3 \\'bfCu\\'e1les son los pasos para utilizar el with para hacer subqueries?\\cb1 \\\n\\cb3 Los pasos para utilizar el with para hacer subqueries son:\\cb1 \\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf5 \\cb3 \\strokec5 1.\\cf4 \\strokec4  Crear un alias para la consulta que se desea utilizar.\\cb1 \\\n\\cf5 \\cb3 \\strokec5 2.\\cf4 \\strokec4  Utilizar el alias en la otra consulta.\\cb1 \\\n\\\n\\pard\\pardeftab720\\partightenfactor0\n\\cf4 \\cb3 \\'bfCu\\'e1l es un ejemplo de una consulta con with?\\cb1 \\\n\\cb3 El siguiente es un ejemplo de una consulta con with:\\cb1 \\\n\\cb3 ",(0,c.kt)("inlineCode",{parentName:"p"},"\\cb1 \\\n\\cb3 WITH my_table AS (\\cb1 \\\n\\cb3   SELECT * FROM table_name\\cb1 \\\n\\cb3 )\\cb1 \\\n\\cb3 SELECT * FROM my_table\\cb1 \\\n\\cb3 "),"\\cb1 \\\n\\cb3 En este ejemplo, la consulta con \\cf6 \\strokec6 ",(0,c.kt)("inlineCode",{parentName:"p"},"with"),"\\cf4 \\strokec4  crea un alias llamado my_table para la consulta que se realiza en la primera l\\'ednea. Luego, la consulta con with utiliza el alias my_table en la segunda l\\'ednea para seleccionar todos los registros de la tabla.\\cb1 \\\n\\\n\\cb3 \\'bfQu\\'e9 es el l\\'edmite en un query?\\cb1 \\\n\\cb3 El l\\'edmite en un query es una instrucci\\'f3n que permite establecer el n\\'famero m\\'e1ximo de filas que se devolver\\'e1n como resultado del query.\\cb1 \\\n\\\n\\cb3 \\'bfC\\'f3mo se utiliza el l\\'edmite en un query?\\cb1 \\\n\\cb3 Para utilizar el l\\'edmite en un query, se utiliza la palabra clave \"limit\" seguida del n\\'famero de filas que se desean devolver. Por ejemplo, el siguiente query devolver\\'e1 las primeras 10 filas de la tabla \"users\":\\cb1 \\\n\\cb3 ",(0,c.kt)("inlineCode",{parentName:"p"},"\\cb1 \\\n\\cb3 SELECT * FROM users LIMIT 10;\\cb1 \\\n\\cb3 "),"\\cb1 \\\n\\cb3 \\'bfPor qu\\'e9 es importante utilizar el l\\'edmite en un query?\\cb1 \\\n\\cb3 El l\\'edmite es importante en un query porque puede ayudar a mejorar el rendimiento de la consulta. Al limitar el n\\'famero de filas que se devuelven, se reduce el tiempo que tarda la consulta en ejecutarse.\\cb1 \\\n\\\n\\cb3 \\'bfCu\\'e1les son las ventajas de utilizar el l\\'edmite en un query?\\cb1 \\\n\\cb3 Las ventajas de utilizar el l\\'edmite en un query son:\\cb1 \\\n\\cb3 \\'95 Mejora el rendimiento de la consulta.\\cb1 \\\n\\cb3 \\'95 Reduce el uso de recursos del servidor.\\cb1 \\\n\\cb3 \\'95 Evita que se devuelvan demasiados datos, lo que puede dificultar la interpretaci\\'f3n de los resultados.\\cb1 \\\n\\\n\\cb3 \\'bfCu\\'e1les son las desventajas de utilizar el l\\'edmite en un query?\\cb1 \\\n\\cb3 Las desventajas de utilizar el l\\'edmite en un query son:\\cb1 \\\n\\cb3 \\'95 Si se establece un l\\'edmite demasiado peque\\'f1o, es posible que se pierdan datos importantes.\\cb1 \\\n\\cb3 \\'95 Si se utiliza el l\\'edmite en un query que se ejecuta con frecuencia, puede afectar al rendimiento del servidor.\\cb1 \\\n\\\n}"))}u.isMDXComponent=!0}}]);