"use strict";(self.webpackChunknavigator_documentation=self.webpackChunknavigator_documentation||[]).push([[1484],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>g});var t=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=t.createContext({}),u=function(e){var a=t.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},c=function(e){var a=u(e.components);return t.createElement(i.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,g=p["".concat(i,".").concat(m)]||p[m]||d[m]||r;return n?t.createElement(g,s(s({ref:a},c),{},{components:n})):t.createElement(g,s({ref:a},c))}));function g(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=m;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l[p]="string"==typeof e?e:o,s[1]=l;for(var u=2;u<r;u++)s[u]=n[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7703:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var t=n(7462),o=(n(7294),n(3905));const r={},s="Introducci\xf3n a Navigator",l={unversionedId:"Navigator Database/Introduccion_Nav",id:"Navigator Database/Introduccion_Nav",title:"Introducci\xf3n a Navigator",description:"\x3c!--",source:"@site/docs/Navigator Database/Introduccion_Nav.md",sourceDirName:"Navigator Database",slug:"/Navigator Database/Introduccion_Nav",permalink:"/navigator-documentation/docs/Navigator Database/Introduccion_Nav",draft:!1,editUrl:"https://github.com/Oslan17/navigator-documentation/tree/main/docs/docs/Navigator Database/Introduccion_Nav.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Navigator Training Frontend",permalink:"/navigator-documentation/docs/Navigator Database/Frontend"},next:{title:"Introduccion_Nav1",permalink:"/navigator-documentation/docs/Navigator Database/Introduccion_Nav1"}},i={},u=[{value:"Introducci\xf3n a Navigator",id:"introducci\xf3n-a-navigator-1",level:2},{value:"Consultas b\xe1sicas en Navigator",id:"consultas-b\xe1sicas-en-navigator",level:2}],c={toc:u},p="wrapper";function d(e){let{components:a,...n}=e;return(0,o.kt)(p,(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introducci\xf3n-a-navigator"},"Introducci\xf3n a Navigator"),(0,o.kt)("h2",{id:"introducci\xf3n-a-navigator-1"},"Introducci\xf3n a Navigator"),(0,o.kt)("p",null,"Navigator es una aplicaci\xf3n web que permite visualizar y analizar datos mediante dashboards y widgets. En la primera hora de la reuni\xf3n de hoy vamos a explicar paso a paso y con ejemplos como gestionar la base de datos de Navigator."),(0,o.kt)("p",null,"La base de datos de Navigator est\xe1 compuesta por varias tablas, las principales son stores, store details, bw stores y store types."),(0,o.kt)("p",null,"En la tabla stores se encuentra la informaci\xf3n de las tiendas, como su ubicaci\xf3n, nombre, tipo de tienda, etc."),(0,o.kt)("p",null,"En la tabla store details se encuentra informaci\xf3n m\xe1s espec\xedfica de las tiendas, como el n\xfamero de visitas que han recibido, los objetivos que tienen, etc."),(0,o.kt)("p",null,"La tabla bw stores es una vista que contiene solo las tiendas activas."),(0,o.kt)("p",null,"La tabla store types contiene los distintos tipos de tiendas que existen."),(0,o.kt)("p",null,"A lo largo de la reuni\xf3n se explicar\xe1 c\xf3mo utilizar estas tablas para realizar consultas y obtener informaci\xf3n de las tiendas."),(0,o.kt)("p",null,"Estructura de las tablas de Navigator"),(0,o.kt)("p",null,"La estructura de las tablas de Navigator es la siguiente:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Stores: Es la tabla principal que contiene informaci\xf3n sobre las tiendas, como su ubicaci\xf3n, tipo, etc.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Store details: Es una tabla que contiene informaci\xf3n espec\xedfica sobre las tiendas, como el n\xfamero de visitas que han recibido, etc.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"BW stores: Es una vista que contiene solo las tiendas activas para un programa determinado."))),(0,o.kt)("p",null,"Para realizar consultas en Navigator, es importante conocer la estructura de las tablas y los distintos tipos de joins que se pueden utilizar."),(0,o.kt)("h2",{id:"consultas-b\xe1sicas-en-navigator"},"Consultas b\xe1sicas en Navigator"),(0,o.kt)("p",null,"Para hacer una consulta en Navigator debemos conocer las tablas que tenemos disponibles y los campos que contienen."),(0,o.kt)("p",null,"Las tablas b\xe1sicas son stores y store details."),(0,o.kt)("p",null,"En stores tenemos informaci\xf3n sobre las tiendas como su ubicaci\xf3n, tipo, etc."),(0,o.kt)("p",null,"En store details tenemos informaci\xf3n m\xe1s espec\xedfica sobre las tiendas que el cliente quiere trabajar."),(0,o.kt)("p",null,"Para hacer una consulta debemos utilizar el comando SELECT seguido de los campos que queremos ver."),(0,o.kt)("p",null,"Podemos utilizar condiciones para filtrar los resultados de la consulta."),(0,o.kt)("p",null,"Podemos utilizar joins para unir dos o m\xe1s tablas."),(0,o.kt)("p",null,"Los joins se pueden hacer de dos formas: inner join y left join."),(0,o.kt)("p",null,"El inner join solo trae los registros que coinciden en las dos tablas."),(0,o.kt)("p",null,"El left join trae todos los registros de la tabla izquierda y los que coinciden en la tabla derecha."),(0,o.kt)("p",null,"Podemos utilizar funciones para transformar los datos de los campos."),(0,o.kt)("p",null,"Podemos utilizar operadores l\xf3gicos para combinar condiciones."),(0,o.kt)("p",null,"Podemos utilizar el comando ORDER BY para ordenar los resultados de la consulta."),(0,o.kt)("p",null,"Podemos utilizar el comando LIMIT para limitar el n\xfamero de resultados de la consulta."),(0,o.kt)("p",null,"Ejercicios pr\xe1cticos\nEste ejercicio con consultas en Navigator es c\xf3mo convertir un campo fecha hora a solo fecha. Para ello, se debe colocar el campo entre comillas dobles y luego dos puntos y la palabra date. De esta forma, se le est\xe1 indicando a Postgres que utilice ese campo pero que lo utilice solo tipo fecha, obviando la hora, minuto y segundo."),(0,o.kt)("p",null,"C\xf3mo hacer un query en Redshift\nEl primer tema tratado en la transcripci\xf3n de c\xf3mo hacer un query en Redshift es c\xf3mo hacer un select en Redshift. Para ello, se debe seleccionar la tabla que se quiere consultar, los campos que se quieren mostrar y las condiciones que se quieren aplicar.\nA continuaci\xf3n, se muestra un ejemplo de un select en Redshift:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT region_name, count(*)\nFROM stores\nWHERE region_name = 'Northeast'\nGROUP BY region_name;\n")),(0,o.kt)("p",null,"Este query selecciona el campo region_name y el campo count(*) de la tabla stores. Adem\xe1s, aplica la condici\xf3n region_name = 'Northeast', que filtra los resultados para que solo se muestren los registros de la regi\xf3n Northeast. Finalmente, el query agrupa los resultados por el campo region_name."),(0,o.kt)("p",null,"C\xf3mo hacer un join, un outer join y un self join en Redshift"),(0,o.kt)("p",null,"Un join es una operaci\xf3n que permite combinar dos o m\xe1s tablas en una sola tabla."),(0,o.kt)("p",null,"Un outer join es un tipo de join que devuelve todas las filas de la tabla de la izquierda, incluso si no hay una fila coincidente en la tabla de la derecha."),(0,o.kt)("p",null,"Un self join es un tipo de join que combina una tabla con ella misma."),(0,o.kt)("p",null,"Se mostraron ejemplos de c\xf3mo utilizar los joins, los outer joins y los self joins en Redshift."),(0,o.kt)("p",null,"C\xf3mo hacer un case en Redshift. "),(0,o.kt)("p",null,"Se explica c\xf3mo usar el case para cambiar el valor de un campo, para hacer c\xe1lculos condicionales y para crear variables"),(0,o.kt)("p",null,"C\xf3mo hacer un case en Redshift. Se explica c\xf3mo usar el case para cambiar el valor de un campo, para hacer c\xe1lculos condicionales y para crear variables"),(0,o.kt)("p",null,"El case es una instrucci\xf3n en Redshift que se utiliza para cambiar el valor de un campo, para hacer c\xe1lculos condicionales y para crear variables."),(0,o.kt)("p",null,"Para cambiar el valor de un campo, se utiliza la siguiente sintaxis:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"CASE WHEN condici\xf3n THEN valor_si_verdadero ELSE valor_si_falso END\n")),(0,o.kt)("p",null,"Por ejemplo, para cambiar el valor del campo ",(0,o.kt)("inlineCode",{parentName:"p"},"status")," a ",(0,o.kt)("inlineCode",{parentName:"p"},"activo")," si el valor del campo ",(0,o.kt)("inlineCode",{parentName:"p"},"is_active")," es ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", y a ",(0,o.kt)("inlineCode",{parentName:"p"},"inactivo")," si el valor del campo ",(0,o.kt)("inlineCode",{parentName:"p"},"is_active")," es ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", se puede utilizar la siguiente instrucci\xf3n:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"CASE WHEN is_active THEN 'activo' ELSE 'inactivo' END\n")),(0,o.kt)("p",null,"Para hacer c\xe1lculos condicionales, se utiliza la siguiente sintaxis:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"CASE WHEN condici\xf3n THEN c\xe1lculo_si_verdadero ELSE c\xe1lculo_si_falso END\n")),(0,o.kt)("p",null,"Por ejemplo, para calcular el precio de un producto si el producto est\xe1 en oferta, y el precio original del producto si el producto no est\xe1 en oferta, se puede utilizar la siguiente instrucci\xf3n:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"CASE WHEN is_on_sale THEN price * 0.9 ELSE price END\n")),(0,o.kt)("p",null,"El case es una instrucci\xf3n en Redshift que se utiliza para cambiar el valor de un campo, para hacer c\xe1lculos condicionales y para crear variables.\nPara cambiar el valor de un campo, se utiliza la siguiente sintaxis:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"CASE WHEN condici\xf3n THEN valor_si_verdadero ELSE valor_si_falso END\n")),(0,o.kt)("p",null,"Por ejemplo, para cambiar el valor del campo ",(0,o.kt)("inlineCode",{parentName:"p"},"status")," a ",(0,o.kt)("inlineCode",{parentName:"p"},"activo")," si el valor del campo ",(0,o.kt)("inlineCode",{parentName:"p"},"is_active")," es ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", y a ",(0,o.kt)("inlineCode",{parentName:"p"},"inactivo")," si el valor del campo ",(0,o.kt)("inlineCode",{parentName:"p"},"is_active")," es ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", se puede utilizar la siguiente instrucci\xf3n:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"CASE WHEN is_active THEN 'activo' ELSE 'inactivo' END\n")),(0,o.kt)("p",null,"Para hacer c\xe1lculos condicionales, se utiliza la siguiente sintaxis:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"CASE WHEN condici\xf3n THEN c\xe1lculo_si_verdadero ELSE c\xe1lculo_si_falso END\n")),(0,o.kt)("p",null,"Por ejemplo, para calcular el precio de un producto si el producto est\xe1 en oferta, y el precio original del producto si el producto no est\xe1 en oferta, se puede utilizar la siguiente instrucci\xf3n:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"CASE WHEN is_on_sale THEN price * 0.9 ELSE price END\n")),(0,o.kt)("p",null,"C\xf3mo hacer un having en Redshift. "),(0,o.kt)("p",null,"Se explica c\xf3mo usar el having para filtrar los resultados de un query"),(0,o.kt)("p",null,"El having es una instrucci\xf3n dentro de eseql que se escribe tal cual suena y se utiliza para filtrar los resultados de un query. Se coloca al final del query, despu\xe9s del group by y antes del order by."),(0,o.kt)("p",null,"La sintaxis del having es la siguiente:"),(0,o.kt)("p",null,"having <condici\xf3n>"),(0,o.kt)("p",null,"Donde <condici\xf3n> es una expresi\xf3n booleana que se utiliza para filtrar los resultados del query."),(0,o.kt)("p",null,"Por ejemplo, para filtrar los resultados de un query por el porcentaje de tiendas focus, se puede utilizar la siguiente condici\xf3n:"),(0,o.kt)("p",null,"having percentage_of_focus_stores < 50"),(0,o.kt)("p",null,"C\xf3mo hacer un group by en Redshift"),(0,o.kt)("p",null,"El group by es una instrucci\xf3n en Redshift que se utiliza para agrupar los datos y calcular estad\xedsticas."),(0,o.kt)("p",null,"Para utilizar el group by, primero se debe seleccionar los campos que se desean agrupar. Luego, se debe utilizar la instrucci\xf3n group by seguida de los campos que se desean agrupar."),(0,o.kt)("p",null,"Por ejemplo, para agrupar los datos por regi\xf3n y calcular el n\xfamero de tiendas por regi\xf3n, se puede utilizar el siguiente query:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"select region, count(*) as stores\nfrom bw_stores\ngroup by region\nEl resultado de este query ser\xeda una tabla con dos columnas: regi\xf3n y n\xfamero de tiendas\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Preguntas m\xe1s frecuentes")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfQu\xe9 es una vista en Navigator?",(0,o.kt)("br",null)),"\nUna vista es una tabla virtual que se crea a partir de una o m\xe1s tablas existentes. Las vistas se utilizan para organizar y presentar los datos de una manera m\xe1s conveniente para el usuario."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfCu\xe1les son las tablas m\xe1s importantes en Navigator?",(0,o.kt)("br",null)),"\nLas tablas m\xe1s importantes en Navigator son las tablas de tiendas, store details y activities. Las tablas de tiendas contienen informaci\xf3n sobre las tiendas, como su ubicaci\xf3n, tipo y estado. Las tablas de store details contienen informaci\xf3n adicional sobre las tiendas, como sus atributos espec\xedficos del programa. Las tablas de activities contienen informaci\xf3n sobre las actividades que se han realizado en las tiendas, como las visitas y las ventas."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo gestionar la base de datos de Navigator?",(0,o.kt)("br",null)),"\nPara gestionar la base de datos de Navigator, es necesario tener conocimientos de SQL."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo consultar los datos en Navigator?",(0,o.kt)("br",null)),"\nPara consultar los datos en Navigator, puede utilizar la herramienta de consultas. La herramienta de consultas le permite seleccionar las tablas que desea consultar, as\xed como los campos que desea mostrar en los resultados de la consulta."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo crear una vista en Navigator?",(0,o.kt)("br",null)),"\nPara crear una vista en Navigator, debe utilizar la herramienta de creaci\xf3n de vistas. La herramienta de creaci\xf3n de vistas le permite seleccionar las tablas que desea incluir en la vista, as\xed como los campos que desea mostrar en la vista."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo modificar una vista en Navigator?",(0,o.kt)("br",null)),"\nPara modificar una vista en Navigator, debes utilizar la herramienta de modificaci\xf3n de vistas. La herramienta de modificaci\xf3n de vistas te permite cambiar los campos que se incluyen en la vista, as\xed como los filtros que se aplican a la vista."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo eliminar una vista en Navigator?",(0,o.kt)("br",null)),"\nPara eliminar una vista en Navigator, debes utilizar la herramienta de eliminaci\xf3n de vistas. La herramienta de eliminaci\xf3n de vistas te permite eliminar una vista de forma permanente."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo exportar los datos de Navigator?",(0,o.kt)("br",null)),"\nPara exportar los datos de Navigator, puede utilizar la herramienta de exportaci\xf3n de datos. La herramienta de exportaci\xf3n de datos le permite exportar los datos a un archivo CSV o XLSX."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo ver todas las tiendas activas y que sean covered en heisen?",(0,o.kt)("br",null)),"\nPara ver todas las tiendas activas y que sean covered en heisen, se puede utilizar el siguiente query:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT *\nFROM stores\nWHERE cover = true\nAND active = true\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo ver las tiendas que tengan visitas no hemos llegado a citas las que sean de tipo bby que hayan sido aperturadas ahorita en el 2023?",(0,o.kt)("br",null)),"\nPara ver las tiendas que tengan visitas no hemos llegado a citas las que sean de tipo bby que hayan sido aperturadas ahorita en el 2023, se puede utilizar el siguiente query:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT *\nFROM stores\nWHERE created_at >= '2023-01-01'\nAND retail_slock = 'bestbuy'\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo ver las tiendas activas y cubiertas en Heisen?",(0,o.kt)("br",null)),"\nSelecciona * from stores where active = true and covered = true;"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfQu\xe9 pasa si tengo cinco tiendas activas y cinco tiendas en store details que son covered pero no est\xe1n activas, las va a traer o no las va a traer?",(0,o.kt)("br",null)),"\nNo las va a traer porque la condici\xf3n que estamos estableciendo es que sean activas o sea que cumple las dos condiciones que sea que est\xe9 cubierta y que est\xe9 activa al no cumplir una de ellas no va a estar incluida all\xed."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfQu\xe9 ocurre cuando hay una condici\xf3n quiero esto y esto?",(0,o.kt)("br",null)),"\nPrimero acu\xe9rdense que hablamos que tenemos una vista donde solo tengo las activas no necesito esto."),(0,o.kt)("p",null,"Luego hay distintos tipos de joint tenemos inner join left join right join cross join y full join."),(0,o.kt)("p",null,"Inner join qu\xe9 hace?"),(0,o.kt)("p",null,"Acu\xe9rdense que siempre que hay un joint independientemente de cual sea excepto el cross join tenemos que darle un condicionamiento por qui\xe9n va a unir las dos tablas que yo quiero hacerle join."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo resuelvo esto quiero el store type que est\xe1 en store details c\xf3mo lo resuelvo?",(0,o.kt)("br",null)),"\nLe digo de d\xf3nde lo va a traer de d.okay la d es el alias de store details si quiero el de la vista de stores le digo ese punto y me trae el que estaba en stores."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo convierto un campo fecha hora solo a fecha en un query?",(0,o.kt)("br",null)),"\nPara convertir un campo fecha hora solo a fecha en un query, se debe utilizar el operador ",(0,o.kt)("inlineCode",{parentName:"p"},"::date"),". Por ejemplo, si el campo se llama ",(0,o.kt)("inlineCode",{parentName:"p"},"created_at"),", se puede utilizar el siguiente c\xf3digo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT *\nFROM stores\nWHERE created_at::date >= '2023-01-01';\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo saber qu\xe9 tiendas son de tipo bby?",(0,o.kt)("br",null)),"\nPara saber qu\xe9 tiendas son de tipo bby, se puede utilizar el campo ",(0,o.kt)("inlineCode",{parentName:"p"},"retail_slock"),". Por ejemplo, el siguiente c\xf3digo devolver\xe1 todas las tiendas de tipo bby:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT *\nFROM stores\nWHERE retail_slock = 'bestbuy';\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo hacer un select en Redshift?",(0,o.kt)("br",null)),"\nPara hacer un select en Redshift, debes usar el siguiente formato:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT <campos> FROM <tabla> WHERE <condici\xf3n>\n")),(0,o.kt)("p",null,'Por ejemplo, para seleccionar todos los campos de la tabla "stores", puedes usar el siguiente comando:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT * FROM stores\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo hacer un join en Redshift?",(0,o.kt)("br",null)),"\nPara hacer un join en Redshift, debes usar el siguiente formato:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT <campos> FROM <tabla1> JOIN <tabla2> ON <condici\xf3n>\n")),(0,o.kt)("p",null,'Por ejemplo, para hacer un join entre las tablas "stores" y "products", puedes usar el siguiente comando:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT * FROM stores JOIN products ON stores.store_id = products.store_id\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo hacer un group by en Redshift?",(0,o.kt)("br",null)),"\nPara hacer un group by en Redshift, debes usar el siguiente formato:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT <campos> FROM <tabla> GROUP BY <campo>\n")),(0,o.kt)("p",null,'Por ejemplo, para agrupar los datos de la tabla "stores" por "region", puedes usar el siguiente comando:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT region, count(*) FROM stores GROUP BY region\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\xbfC\xf3mo puedo hacer un having en Redshift?",(0,o.kt)("br",null)),"\nPara hacer un having en Redshift, debes usar el siguiente formato:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT <campos> FROM <tabla> GROUP BY <campo> HAVING <condici\xf3n>\n")),(0,o.kt)("p",null,"Por ejemplo, para seleccionar todas las regiones que tienen m\xe1s de 10 tiendas, puedes usar el siguiente comando:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"SELECT region, count(*) FROM stores GROUP BY region HAVING count(*) > 10\n")))}d.isMDXComponent=!0}}]);