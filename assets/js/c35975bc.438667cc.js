"use strict";(self.webpackChunknavigator_documentation=self.webpackChunknavigator_documentation||[]).push([[6],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>f});var t=n(7294);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=t.createContext({}),u=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},d=function(e){var a=u(e.components);return t.createElement(s.Provider,{value:a},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=u(n),c=l,f=p["".concat(s,".").concat(c)]||p[c]||m[c]||i;return n?t.createElement(f,r(r({ref:a},d),{},{components:n})):t.createElement(f,r({ref:a},d))}));function f(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=c;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o[p]="string"==typeof e?e:l,r[1]=o;for(var u=2;u<i;u++)r[u]=n[u];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5730:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var t=n(7462),l=(n(7294),n(3905));const i={},r="Navigator Training Frontend",o={unversionedId:"Navigator Database/Training",id:"Navigator Database/Training",title:"Navigator Training Frontend",description:"Comenzando",source:"@site/docs/Navigator Database/Training.md",sourceDirName:"Navigator Database",slug:"/Navigator Database/Training",permalink:"/navigator-documentation/docs/Navigator Database/Training",draft:!1,editUrl:"https://github.com/Oslan17/navigator-documentation/tree/main/docs/docs/Navigator Database/Training.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Como realizar consultas en SQL",permalink:"/navigator-documentation/docs/Navigator Database/Training-1"},next:{title:"Tutorials Navigator",permalink:"/navigator-documentation/docs/category/tutorials-navigator"}},s={},u=[{value:"Comenzando",id:"comenzando",level:2},{value:"What you&#39;ll need",id:"what-youll-need",level:3},{value:"1. Resumen",id:"1-resumen",level:2},{value:"2. Temas desarrollados",id:"2-temas-desarrollados",level:2},{value:"3. Preguntas m\xe1s frecuentes",id:"3-preguntas-m\xe1s-frecuentes",level:2}],d={toc:u},p="wrapper";function m(e){let{components:a,...n}=e;return(0,l.kt)(p,(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"navigator-training-frontend"},"Navigator Training Frontend"),(0,l.kt)("h2",{id:"comenzando"},"Comenzando"),(0,l.kt)("p",null,"Comencemos con los ",(0,l.kt)("strong",{parentName:"p"},"Conceptos Basicos del Uso de Comandos SQL"),"."),(0,l.kt)("h3",{id:"what-youll-need"},"What you'll need"),(0,l.kt)("h2",{id:"1-resumen"},"1. Resumen"),(0,l.kt)("p",null,"En la transcripci\xf3n se explica c\xf3mo funciona la tabla for data de hen y c\xf3mo se deben realizar las consultas para obtener informaci\xf3n de ella. Se dan varios ejemplos de consultas y se explica c\xf3mo interpretar los resultados. Adem\xe1s, se indica que para ma\xf1ana se realizar\xe1 un curso en el que se ense\xf1ar\xe1 a realizar consultas m\xe1s complejas con esta tabla."),(0,l.kt)("h2",{id:"2-temas-desarrollados"},"2. Temas desarrollados"),(0,l.kt)("p",null,"La tabla for data\nLa tabla for data es una tabla sencilla que contiene informaci\xf3n de las visitas realizadas a una tienda de un cliente. Cada fila de la tabla representa una visita y contiene informaci\xf3n sobre el n\xfamero de la visita, la fecha de la visita, la tienda en la que se realiz\xf3 la visita, el tipo de formulario utilizado y las respuestas a las preguntas del formulario. Esta informaci\xf3n se utiliza para analizar el rendimiento de las tiendas y para mejorar la experiencia de los clientes."),(0,l.kt)("p",null,"La tabla for data tiene 511 columnas, pero no todas las columnas est\xe1n presentes en todas las visitas. Las columnas que est\xe1n presentes en una visita dependen del tipo de formulario utilizado para realizar la visita."),(0,l.kt)("p",null,"El n\xfamero de la visita se almacena en la columna form id. El tipo de formulario se almacena en la columna form."),(0,l.kt)("p",null,"La tabla for data tambi\xe9n contiene informaci\xf3n sobre la fecha y hora de la visita, la tienda visitada, el empleado que realiz\xf3 la visita, etc."),(0,l.kt)("p",null,"Preguntas que se pueden hacer en una visita\nLas preguntas se pueden clasificar en dos tipos: preguntas est\xe1ndar y preguntas espec\xedficas de cada tipo de visita."),(0,l.kt)("p",null,"Las preguntas est\xe1ndar son aquellas que se hacen en todas las visitas, independientemente del tipo de tienda que se visite. Estas preguntas incluyen informaci\xf3n sobre la fecha y hora de la visita, la tienda que se visit\xf3, qui\xe9n hizo la visita, etc."),(0,l.kt)("p",null,"Las preguntas espec\xedficas de cada tipo de visita son aquellas que se hacen solo en visitas de un tipo espec\xedfico de tienda. Por ejemplo, en una visita a una tienda de electr\xf3nica, se puede preguntar si el producto que se busca est\xe1 en stock, si el precio es el adecuado, etc."),(0,l.kt)("p",null,"Todas las preguntas se almacenan en la tabla for data. El n\xfamero de la visita se almacena en el campo form id, y el tipo de pregunta se almacena en el campo column name. La respuesta a la pregunta se almacena en el campo data."),(0,l.kt)("p",null,"Form ID y Formit\nEl form id es el n\xfamero de la visita y el formit es el tipo de formulario que se est\xe1 utilizando.\nObtener el store id de una visita\nPara obtener el store id de una visita, se debe utilizar el campo 03 de la tabla hensenformdata. Este campo contiene el id de la tienda donde se realiz\xf3 la visita."),(0,l.kt)("p",null,"Obtener la fecha de actualizaci\xf3n de una visita\nPara obtener la fecha de actualizaci\xf3n de una visita, se puede utilizar el siguiente query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"SELECT form_id,\n       store_id,\n       date,\n       region_name,\n       district_name,\n       market_name\nFROM hensen_form_data\nJOIN hen_stores\nON hensen_form_data.store_id = hen_stores.store_id\nWHERE form_id = 3793\nAND updated date IS NOT NULL\nLIMIT 100;\n")),(0,l.kt)("p",null,"Este query selecciona los siguientes campos de las dos tablas:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"form_id: El n\xfamero de la visita."),(0,l.kt)("li",{parentName:"ul"},"store_id: El ID de la tienda."),(0,l.kt)("li",{parentName:"ul"},"date: La fecha de la visita."),(0,l.kt)("li",{parentName:"ul"},"region_name: El nombre de la regi\xf3n."),(0,l.kt)("li",{parentName:"ul"},"district_name: El nombre del distrito."),(0,l.kt)("li",{parentName:"ul"},"market_name: El nombre del mercado.")),(0,l.kt)("p",null,"El query tambi\xe9n utiliza el operador ",(0,l.kt)("inlineCode",{parentName:"p"},"JOIN")," para unir las dos tablas por el campo ",(0,l.kt)("inlineCode",{parentName:"p"},"store_id"),"."),(0,l.kt)("p",null,"El operador ",(0,l.kt)("inlineCode",{parentName:"p"},"WHERE")," se utiliza para filtrar los resultados por el campo ",(0,l.kt)("inlineCode",{parentName:"p"},"form_id")," y el campo ",(0,l.kt)("inlineCode",{parentName:"p"},"updated_date"),"."),(0,l.kt)("p",null,"El campo ",(0,l.kt)("inlineCode",{parentName:"p"},"form_id")," se utiliza para seleccionar solo las visitas del formulario 3793."),(0,l.kt)("p",null,"El campo ",(0,l.kt)("inlineCode",{parentName:"p"},"updated_date")," se utiliza para seleccionar solo las visitas que han sido actualizadas."),(0,l.kt)("p",null,"El l\xedmite de 100 se utiliza para limitar el n\xfamero de resultados que se devuelven."),(0,l.kt)("p",null,"Join entre dos tablas\nSe debe utilizar el comando ",(0,l.kt)("inlineCode",{parentName:"p"},"select")," para traer los campos ",(0,l.kt)("inlineCode",{parentName:"p"},"form id"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"store id"),", fecha, nombre de la regi\xf3n, nombre del distrito y nombre del market de las dos tablas. Los tres primeros campos del select salen de la tabla henenseform data y los tres \xfaltimos campos salen de la tabla hen stores. Como ya se vio en el query anterior, la columna triple0 piso 013 es la que trae el ",(0,l.kt)("inlineCode",{parentName:"p"},"store id"),", donde lo consigues en el campo data de esa columna y el updated date sale de la columna triple0 piso 055, donde lo consigues en el campo data de esa columna. Todo esto se debe hacer utilizando formit que es el tipo de formulario, no form id que es el n\xfamero de visita, formit 3793 y por favor utilicen un l\xedmite inclusive para las pruebas no solo para el query final."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"With")," para hacer subqueries\nEjemplo para utilizar el ",(0,l.kt)("inlineCode",{parentName:"p"},"with")," para hacer subqueries:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"select form_id, store_id, date, updated_date\nfrom hensenseform_data\nwhere form_id = 3793\nlimit 100;\n")),(0,l.kt)("p",null,"Este query trae el form_id, store_id, date y updated_date de la tabla hensenseform_data, donde el form_id es igual a 3793 y se le pone un l\xedmite de 100."),(0,l.kt)("p",null,"L\xedmite en un query\nEl l\xedmite se utiliza para indicar el n\xfamero de filas que se van a devolver en un query. Se puede utilizar en cualquier tipo de query, pero es especialmente \xfatil cuando se trabaja con grandes cantidades de datos."),(0,l.kt)("p",null,'Para utilizar el l\xedmite, se utiliza la palabra clave "limit" seguida del n\xfamero de filas que se desean devolver. Por ejemplo, el siguiente query devolver\xe1 las primeras 10 filas de la tabla "users":'),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"SELECT * FROM users LIMIT 10;")),(0,l.kt)("p",null,"El l\xedmite se puede utilizar junto con otros operadores de consulta, como ",(0,l.kt)("inlineCode",{parentName:"p"},"where")," y ",(0,l.kt)("inlineCode",{parentName:"p"},"order by"),'. Por ejemplo, el siguiente query devolver\xe1 las primeras 10 filas de la tabla "users" que tengan el nombre "John":'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'SELECT * FROM users WHERE name = "John" LIMIT 10;\nEl l\xedmite tambi\xe9n se puede utilizar para paginar los resultados de un query. Por ejemplo, el siguiente query devolver\xe1 las primeras 10 filas de la tabla "users", y luego se ejecutar\xe1 nuevamente para devolver las siguientes 10 filas, y as\xed sucesivamente:\nSELECT * FROM users LIMIT 10 OFFSET 0;\nSELECT * FROM users LIMIT 10 OFFSET 10;\nSELECT * FROM users LIMIT 10 OFFSET 20;\n')),(0,l.kt)("p",null,"Y as\xed sucesivamente.\nEnunciado ejercicio pr\xe1ctico\nCopiar el siguiente query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"select form_id,\nstore_id,\ndata as store_id,\nupdated_date\nfrom hensenseform_data\nwhere form_id = 3793\nlimit 100;\n")),(0,l.kt)("p",null,"Este query traer\xe1 el ",(0,l.kt)("inlineCode",{parentName:"p"},"form_id"),", el ",(0,l.kt)("inlineCode",{parentName:"p"},"store_id"),", la fecha y el updated_date de la tabla hensenseform_data, utilizando el ",(0,l.kt)("inlineCode",{parentName:"p"},"form_id")," = 3793 como filtro.\nEste query se tiene que trabajar en staging y con un l\xedmite de 100 para no traer toda la data."),(0,l.kt)("h2",{id:"3-preguntas-m\xe1s-frecuentes"},"3. Preguntas m\xe1s frecuentes"),(0,l.kt)("p",null,"\xbfQu\xe9 es una visita?\nUna visita es un formulario que llena la persona que va a hacer la visita."),(0,l.kt)("p",null,"\xbfCu\xe1les son los distintos tipos de preguntas que se pueden hacer en una visita?\nHay distintos tipos de preguntas que se pueden hacer en una visita, por ejemplo:"),(0,l.kt)("p",null,"\u2022\t\xbfD\xf3nde est\xe1 el producto?\n\u2022\t\xbfC\xf3mo funciona el producto?\n\u2022\t\xbfQu\xe9 tan satisfecho est\xe1 con el producto?\n\u2022\t\xbfRecomendar\xeda el producto a un amigo?\n\u2022\t\xbfQu\xe9 podr\xeda mejorarse en el producto?"),(0,l.kt)("p",null,"Estas son solo algunas de las preguntas que se pueden hacer en una visita, y las respuestas a estas preguntas pueden ayudar a las empresas a mejorar sus productos y servicios."),(0,l.kt)("p",null,"\xbfC\xf3mo se guarda la informaci\xf3n de una visita en la tabla hensenformdata?\nLa informaci\xf3n de una visita se guarda en la tabla hensenformdata en forma de registros. Cada registro corresponde a una pregunta y respuesta de la visita."),(0,l.kt)("p",null,"\xbfQu\xe9 es el ",(0,l.kt)("inlineCode",{parentName:"p"},"form id"),"?\nEl ",(0,l.kt)("inlineCode",{parentName:"p"},"form id")," es el n\xfamero de la visita."),(0,l.kt)("p",null,"\xbfQu\xe9 es el ",(0,l.kt)("inlineCode",{parentName:"p"},"formit"),"?\nEl ",(0,l.kt)("inlineCode",{parentName:"p"},"formit")," es el tipo de formulario que se est\xe1 utilizando."),(0,l.kt)("p",null,"\xbfD\xf3nde puedo encontrar la lista de formularios que hay disponibles?\nPuedes encontrar la lista de formularios disponibles en la tabla forms."),(0,l.kt)("p",null,"\xbfC\xf3mo se llama la columna que contiene el ",(0,l.kt)("inlineCode",{parentName:"p"},"store id"),"?\nLa columna que contiene el ",(0,l.kt)("inlineCode",{parentName:"p"},"store id")," es la columna 03."),(0,l.kt)("p",null,"\xbfC\xf3mo se llama la columna que contiene la fecha?\nLa columna que contiene la fecha es la columna 055."),(0,l.kt)("p",null,"\xbfC\xf3mo obtener el ",(0,l.kt)("inlineCode",{parentName:"p"},"store id")," de una visita?\nPara obtener el ",(0,l.kt)("inlineCode",{parentName:"p"},"store id")," de una visita, se puede utilizar el siguiente query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"SELECT form_id,\n       store_id,\n       date,\n       region_name,\n       district_name,\n       market_name\nFROM hensenform_data\nJOIN hen_stores\nON hensenform_data.store_id = hen_stores.store_id\nWHERE form_id = 3793\nLIMIT 100;\n")),(0,l.kt)("p",null,"\xbfC\xf3mo se puede consultar la informaci\xf3n de una visita en la tabla hensenformdata?\nPara consultar la informaci\xf3n de una visita en la tabla hensenformdata, se puede utilizar el siguiente query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"select form_id, store_id, date, region, district, market\nfrom hensenformdata\njoin hen_stores on hensenformdata.store_id = hen_stores.store_id\nwhere form_id = 3793\nlimit 100;\n")),(0,l.kt)("p",null,"Este query selecciona el ",(0,l.kt)("inlineCode",{parentName:"p"},"form_id"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"store_id"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"date"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"region"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"district")," y ",(0,l.kt)("inlineCode",{parentName:"p"},"market")," de la tabla hensenformdata. El ",(0,l.kt)("inlineCode",{parentName:"p"},"store_id")," se utiliza para unir las dos tablas, y el ",(0,l.kt)("inlineCode",{parentName:"p"},"form_id")," se utiliza para seleccionar solo las filas que corresponden a la visita con el id 3793.\nEl l\xedmite de 100 se utiliza para evitar que se devuelvan todas las filas de la tabla."),(0,l.kt)("p",null,"\xbfC\xf3mo se puede utilizar la tabla hensenformdata para analizar la informaci\xf3n de las visitas?\nLa tabla hensenformdata se puede utilizar para analizar la informaci\xf3n de las visitas mediante el uso de consultas. Las consultas permiten extraer informaci\xf3n espec\xedfica de la tabla, como el n\xfamero de visitas, el tipo de formulario utilizado, la fecha y la hora de la visita, la tienda visitada, etc. Las consultas tambi\xe9n se pueden utilizar para realizar an\xe1lisis m\xe1s complejos, como la comparaci\xf3n de datos entre diferentes visitas o la identificaci\xf3n de tendencias."),(0,l.kt)("p",null,"\xbfC\xf3mo obtener la fecha de actualizaci\xf3n de una visita?\nPara obtener la fecha de actualizaci\xf3n de una visita, se puede utilizar el siguiente query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"SELECT form_id,\n  store_id,\n  date,\n  region_name,\n  district_name,\n  market_name\nFROM hensen_form_data\nJOIN hen_stores ON hensen_form_data.store_id = hen_stores.store_id\nWHERE form_id = 3793\nAND updated_date IS NOT NULL\nLIMIT 100;\n")),(0,l.kt)("p",null,"Este query obtiene el ",(0,l.kt)("inlineCode",{parentName:"p"},"form_id"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"store_id"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"date"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"region_name"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"district_name")," y ",(0,l.kt)("inlineCode",{parentName:"p"},"market_name")," de las tablashensen_form_data y hen_stores. El ",(0,l.kt)("inlineCode",{parentName:"p"},"form_id")," y ",(0,l.kt)("inlineCode",{parentName:"p"},"store_id")," se obtienen de la tabla hensen_form_data, mientras que la fecha, la regi\xf3n, el distrito y el mercado se obtienen de la tabla hen_stores. El query tambi\xe9n utiliza el operador AND para filtrar los resultados por el ",(0,l.kt)("inlineCode",{parentName:"p"},"form_id")," y el ",(0,l.kt)("inlineCode",{parentName:"p"},"updated_date"),".\nEl l\xedmite de 100 se utiliza para limitar el n\xfamero de resultados que se devuelven."),(0,l.kt)("p",null,"\xbfQu\xe9 es un join?\nUn join es una operaci\xf3n que combina dos o m\xe1s tablas de una base de datos en una sola tabla. Esto permite obtener informaci\xf3n de ambas tablas a la vez."),(0,l.kt)("p",null,'\xbfC\xf3mo se hace un join?\nPara hacer un join, se utilizan las palabras clave "join" y "on". La palabra "join" indica que se va a realizar un join, y la palabra "on" indica el campo o campos que se utilizar\xe1n para unir las dos tablas.'),(0,l.kt)("p",null,"\xbfCu\xe1les son los diferentes tipos de joins?"),(0,l.kt)("p",null,"Los diferentes tipos de joins son:\n\u2022\tInner join:\nEl inner join devuelve todos los registros de la tabla izquierda que coinciden con los registros de la tabla derecha.\n\u2022\tLeft outer join:\nEl left outer join devuelve todos los registros de la tabla izquierda, incluso si no hay coincidencias en la tabla derecha.\n\u2022\tRight outer join:\nEl right outer join devuelve todos los registros de la tabla derecha, incluso si no hay coincidencias en la tabla izquierda.\n\u2022\tFull outer join:\nEl full outer join devuelve todos los registros de ambas tablas, incluso si no hay coincidencias en ninguna de las tablas."),(0,l.kt)("p",null,"\xbfCu\xe1l es el join m\xe1s utilizado?\nEl join m\xe1s utilizado es el inner join. Esto se debe a que el inner join solo devuelve los registros que coinciden en ambas tablas, lo que evita que se devuelvan registros duplicados."),(0,l.kt)("p",null,"\xbfC\xf3mo puedo hacer un join en PostgreSQL?\n\u2022\tPara hacer un join en PostgreSQL, se utilizan las siguientes instrucciones:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u2022   SELECT * FROM table1 JOIN table2 ON table1.column1 = table2.column2;\n\u2022   SELECT * FROM table1 LEFT JOIN table2 ON table1.column1 = table2.column2;\n\u2022   SELECT * FROM table1 RIGHT JOIN table2 ON table1.column1 = table2.column2;\n\u2022   SELECT * FROM table1 FULL JOIN table2 ON table1.column1 = table2.column2;\n")),(0,l.kt)("p",null,"\xbfC\xf3mo se utiliza el with para hacer subqueries?\nEl with se utiliza para crear un alias para una consulta y luego utilizar ese alias en otra consulta. Esto permite crear consultas m\xe1s complejas y eficientes."),(0,l.kt)("p",null,"\xbfCu\xe1les son las ventajas de utilizar el with para hacer subqueries?\nLas ventajas de utilizar el with para hacer subqueries son:\n\u2022\tPermite crear consultas m\xe1s complejas y eficientes.\n\u2022\tReduce la cantidad de c\xf3digo que se necesita escribir.\n\u2022\tFacilita la comprensi\xf3n de las consultas."),(0,l.kt)("p",null,"\xbfCu\xe1les son los pasos para utilizar el with para hacer subqueries?\nLos pasos para utilizar el with para hacer subqueries son:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Crear un alias para la consulta que se desea utilizar."),(0,l.kt)("li",{parentName:"ol"},"Utilizar el alias en la otra consulta.")),(0,l.kt)("p",null,"\xbfCu\xe1l es un ejemplo de una consulta con with?\nEl siguiente es un ejemplo de una consulta con with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"WITH my_table AS (\n  SELECT * FROM table_name\n)\nSELECT * FROM my_table\n")),(0,l.kt)("p",null,"En este ejemplo, la consulta con ",(0,l.kt)("inlineCode",{parentName:"p"},"with")," crea un alias llamado my_table para la consulta que se realiza en la primera l\xednea. Luego, la consulta con with utiliza el alias my_table en la segunda l\xednea para seleccionar todos los registros de la tabla."),(0,l.kt)("p",null,"\xbfQu\xe9 es el l\xedmite en un query?\nEl l\xedmite en un query es una instrucci\xf3n que permite establecer el n\xfamero m\xe1ximo de filas que se devolver\xe1n como resultado del query."),(0,l.kt)("p",null,'\xbfC\xf3mo se utiliza el l\xedmite en un query?\nPara utilizar el l\xedmite en un query, se utiliza la palabra clave "limit" seguida del n\xfamero de filas que se desean devolver. Por ejemplo, el siguiente query devolver\xe1 las primeras 10 filas de la tabla "users":'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"SELECT * FROM users LIMIT 10;\n")),(0,l.kt)("p",null,"\xbfPor qu\xe9 es importante utilizar el l\xedmite en un query?\nEl l\xedmite es importante en un query porque puede ayudar a mejorar el rendimiento de la consulta. Al limitar el n\xfamero de filas que se devuelven, se reduce el tiempo que tarda la consulta en ejecutarse."),(0,l.kt)("p",null,"\xbfCu\xe1les son las ventajas de utilizar el l\xedmite en un query?\nLas ventajas de utilizar el l\xedmite en un query son:\n\u2022\tMejora el rendimiento de la consulta.\n\u2022\tReduce el uso de recursos del servidor.\n\u2022\tEvita que se devuelvan demasiados datos, lo que puede dificultar la interpretaci\xf3n de los resultados."),(0,l.kt)("p",null,"\xbfCu\xe1les son las desventajas de utilizar el l\xedmite en un query?\nLas desventajas de utilizar el l\xedmite en un query son:\n\u2022\tSi se establece un l\xedmite demasiado peque\xf1o, es posible que se pierdan datos importantes.\n\u2022\tSi se utiliza el l\xedmite en un query que se ejecuta con frecuencia, puede afectar al rendimiento del servidor."))}m.isMDXComponent=!0}}]);