"use strict";(self.webpackChunknavigator_documentation=self.webpackChunknavigator_documentation||[]).push([[5914],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>d});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=n.createContext({}),s=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},c=function(e){var a=s(e.components);return n.createElement(p.Provider,{value:a},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},g=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(t),g=r,d=m["".concat(p,".").concat(g)]||m[g]||u[g]||i;return t?n.createElement(d,o(o({ref:a},c),{},{components:t})):n.createElement(d,o({ref:a},c))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=g;var l={};for(var p in a)hasOwnProperty.call(a,p)&&(l[p]=a[p]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2291:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=t(7462),r=(t(7294),t(3905));const i={},o="Instalacion DataIntegration",l={unversionedId:"Tutorials-Navigator/Install Navigator",id:"Tutorials-Navigator/Install Navigator",title:"Instalacion DataIntegration",description:"Instalaci\xf3n de Plataforma",source:"@site/docs/Tutorials-Navigator/Install Navigator.md",sourceDirName:"Tutorials-Navigator",slug:"/Tutorials-Navigator/Install Navigator",permalink:"/navigator-documentation/docs/Tutorials-Navigator/Install Navigator",draft:!1,editUrl:"https://github.com/Oslan17/navigator-documentation/tree/main/docs/docs/Tutorials-Navigator/Install Navigator.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tutorials Navigator",permalink:"/navigator-documentation/docs/category/tutorials-navigator"}},p={},s=[{value:"Instalaci\xf3n de Plataforma",id:"instalaci\xf3n-de-plataforma",level:2},{value:"Instalamos pyenv:",id:"instalamos-pyenv",level:2}],c={toc:s},m="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(m,(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"instalacion-dataintegration"},"Instalacion DataIntegration#"),(0,r.kt)("h2",{id:"instalaci\xf3n-de-plataforma"},"Instalaci\xf3n de Plataforma"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Duraci\xf3n estimada del ejercicio:")," 15 minutos."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Notas:")," documentar cualquier issue que encuentren en el flujo de instalaci\xf3n de la plataforma.\n1- Crear el siquiente ambiente de trabajo:"),(0,r.kt)("p",null,"folders:"),(0,r.kt)("pre",null,"navigator/ navapi/ dataintegration/ dataintegrator-tasks/"),(0,r.kt)("p",null,"ejemplo: mkdir -p navigator/{navapi,dataintegration,di-worker}"),(0,r.kt)("p",null,"2.- Clonar los repositorios de las 3 herramientas en el directorio existente."),(0,r.kt)("p",null,"Antes de clonar el repositorio, deberas configurar el metodo Auth de Git a usar, si es mediante SSH deberas configurar la clave id_rsa id_rsa.pub para tu usuario en el servidor. Alternativamente puedes utilizar un ",(0,r.kt)("a",{parentName:"p",href:"https://docs.github.com/es/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"},"Personal Access Token")," y clonar el repositorio mediante HTTPS."),(0,r.kt)("p",null,"cd navigator/"),(0,r.kt)("p",null,"Codebase URL:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Navapi: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/MobileInsight/navigator-api"},"https://github.com/MobileInsight/navigator-api")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"git command: ")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"git clone git@github.com:MobileInsight/navigator-api.git navapi\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Dataintegration > ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/MobileInsight/navigator-dataintegrator"},"https://github.com/MobileInsight/navigator-dataintegrator")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"git command: ")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"git clone git@github.com:MobileInsight/navigator-dataintegrator.git dataintegration\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Dataintegration > ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/MobileInsight/navigator-dataintegrator-tasks.git"},"https://github.com/MobileInsight/navigator-dataintegrator-tasks.git")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"git command: ")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"git clone git@github.com:MobileInsight/navigator-dataintegrator-tasks.git\n")))),(0,r.kt)("p",null,'3.- acceder a cada repositorio y hacer checkout a la rama "main".  '),(0,r.kt)("p",null,"4.- crear la carpeta env/"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"      mkdir -p ~/navigator/navapi/env &&\n      mkdir -p ~/navigator/dataintegration/env &&\n")),(0,r.kt)("p",null,"quedando organizado as\xed:"),(0,r.kt)("pre",null,"navigator / \u251c\u2500\u2500 navapi / \u251c\u2500\u2500 env / \u251c\u2500\u2500 dataintegration / \u251c\u2500\u2500 env /"),(0,r.kt)("p",null,"5.- copiar un .env en la carpeta env/ de cada proyecto."),(0,r.kt)("p",null,"Dependiendo del archivo .env que utilices y las tareas que se deseen ejecutar es posible que requieras crear los siguientes directorios"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"      cd ~/\n      mkdir -p ~/symbits &&\n      mkdir -p ~/tasks/programs &&\n      mkdir -p ~/tmp/navigator/log/\n")),(0,r.kt)("h2",{id:"instalamos-pyenv"},"Instalamos pyenv:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Instalamos el programa ",(0,r.kt)("inlineCode",{parentName:"p"},"pyenv"),". "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/pyenv/pyenv.git ~/.pyenv\n")),(0,r.kt)("p",{parentName:"li"},"configurar BASH ",(0,r.kt)("inlineCode",{parentName:"p"},".bashrc"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo \'export PYENV_ROOT="$HOME/.pyenv"\' >> ~/.bashrc &&\necho \'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"\' >> ~/.bashrc &&\necho \'eval "$(pyenv init -)"\' >> ~/.bashrc &&\nexec "$SHELL"\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Una vez instalado ",(0,r.kt)("inlineCode",{parentName:"p"},"pyenv"),", procedemos a validar si est\xe1 funcionando correctamente con los siguientes comandos:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pyenv install --list  # Verificar las versiones disponibles\npyenv install 3.10.10  # Seleccionar una versi\xf3n para instalar\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Dentro del directorio ",(0,r.kt)("inlineCode",{parentName:"p"},"navigator"),", activamos el entorno virtual ",(0,r.kt)("inlineCode",{parentName:"p"},"env"),":"),(0,r.kt)("p",{parentName:"li"},"Crear el ambiente virtual de Python:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pyenv local 3.10.10\npython -V # Seleccionar una versi\xf3n para instalar. Verificamos lo instalado\n")),(0,r.kt)("p",{parentName:"li"},"Luego, activamos el ambiente virtual:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"python -m venv .venv\nsource .venv/bin/activate\n")),(0,r.kt)("p",{parentName:"li"},"Nota: Para desactivar el ambiente, ejecutamos ",(0,r.kt)("inlineCode",{parentName:"p"},"deactivate")," en el directorio.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Instalaci\xf3n de Navigator: Una vez que el ambiente est\xe1 activo (se verifica porque en la terminal aparece ",(0,r.kt)("inlineCode",{parentName:"p"},"(.venv)")," antes del nombre de usuario), se procede a la instalaci\xf3n ejecutando el siguiente comando: Dentro de la carpeta de "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"   make distclean\n   make develinstall\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Ejecuci\xf3n de la aplicaci\xf3n:"),(0,r.kt)("p",{parentName:"li"},"Modificamos los archivos ubicados en:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nano env/staging/.env")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nano env/production/.env")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nano env/qa/.env")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nano env/dev/.env"))),(0,r.kt)("p",{parentName:"li"},"Realizamos los cambios necesarios en los archivos, reemplazando las rutas por la ruta de nuestro usuario:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"PATH=/home/your_username/symbits/\nETL_PATH=/home/your_username/symbits/\nTASK_PATH=/home/your_username/navigator-dataintegrator-tasks/programs\n")),(0,r.kt)("p",{parentName:"li"},"Nota: Debemos crear la carpeta fuera del directorio ",(0,r.kt)("inlineCode",{parentName:"p"},"navigator-dataintegrator")," con el siguiente comando:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir ~/symbits\n")),(0,r.kt)("p",{parentName:"li"},"Luego, podemos realizar pruebas ejecutando las tareas:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ENV=production di --program=walmart --task=hourly_postpaid --no-worker --debug\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"En la ruta ",(0,r.kt)("inlineCode",{parentName:"p"},"home/your_username/navigator-dataintegrator/etc"),", "))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[logging]\nlogdir: /tmp/navigator/log/\nlogging_echo: true\n## Rotating file log:\nfilehandler_enabled: false\n## Logstash\nlogstash_enabled: false\nlogstash_logging: INFO\nlogging_host: 127.0.0.1\nlogging_port: 6000\n# Mail for Errors\nmailer_enabled: false\nlogging_mail_host: localhost\nlogging_admin: no-reply@mobileinsight.com\nlogging_email: jlara@trocglobal.com\n")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},'desactivar el Scheduler en el ".env" de dataintegration (evitar ejecuci\xf3n accidental de tareas)')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"    [scheduler]\n    SCHEDULER=false\n")))}u.isMDXComponent=!0}}]);